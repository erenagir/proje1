// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proje1.Persistence.Context;

#nullable disable

namespace Proje1.Persistence.Migrations
{
    [DbContext(typeof(ProjeContext))]
    partial class ProjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proje1.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(40)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSWORD")
                        .HasColumnOrder(4);

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PERSON_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("USERNAME")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("ACCOUNTS", (string)null);
                });

            modelBuilder.Entity("Proje1.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ADDRESS")
                        .HasColumnOrder(3);

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("COMPANY_EMAİL")
                        .HasColumnOrder(4);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_NAME")
                        .HasColumnOrder(2);

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("COMPANY_PHONE")
                        .HasColumnOrder(5);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CREATE_BY")
                        .HasColumnOrder(36);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(37);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(40)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(38);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(39);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_PRICE")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("OFFERS", (string)null);
                });

            modelBuilder.Entity("Proje1.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMAİL")
                        .HasColumnOrder(4);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(40)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(2);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID")
                        .HasColumnOrder(5);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SURNAME")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("PERSONS", (string)null);
                });

            modelBuilder.Entity("Proje1.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CREATE_BY")
                        .HasColumnOrder(36);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(37);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(40)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(38);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(39);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(2);

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("PRODUCTDETAİL")
                        .HasColumnOrder(3);

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("STOCK")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("PRODUCTS", (string)null);
                });

            modelBuilder.Entity("Proje1.Domain.Entities.RequestForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CREATE_BY")
                        .HasColumnOrder(36);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnOrder(37);

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAİL")
                        .HasColumnOrder(4);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(40)
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnOrder(38);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE")
                        .HasColumnOrder(39);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(3);

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PERSON_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("Products")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPANY_EMAİL")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("REQUESTFORM", (string)null);
                });

            modelBuilder.Entity("Proje1.Domain.Entities.Account", b =>
                {
                    b.HasOne("Proje1.Domain.Entities.Person", "Person")
                        .WithOne("Account")
                        .HasForeignKey("Proje1.Domain.Entities.Account", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Proje1.Domain.Entities.RequestForm", b =>
                {
                    b.HasOne("Proje1.Domain.Entities.Person", "Person")
                        .WithMany("RequestForms")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Proje1.Domain.Entities.Person", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("RequestForms");
                });
#pragma warning restore 612, 618
        }
    }
}
